\documentclass{article}
\usepackage{mathtools}
\usepackage{amsmath}
\usepackage{amssymb}

\newcommand{\translate}[1]{\ensuremath{[\![#1]\!]}}
\newcommand{\lit}[1]{\ensuremath{\ulcorner #1\urcorner}}
\newcommand{\cut}[2]{\ensuremath{\langle #1 \mid #2 \rangle}}
\newcommand{\letin}[3]{\ensuremath{\mathbf{let}\ #1 \coloneq #2\ \mathbf{in}\ #3}}
\newcommand{\caseof}[2]{\ensuremath{\mathbf{case}\ #1\ \mathbf{of}\ \{ #2 \}}}

\begin{document}

\section{Fun Syntax}

\[ 
\begin{array}{l c r r} 
  K & \coloneqq & \mathtt{Nil}, \mathtt{Cons}, \mathtt{Tup} & \emph{Constructors}\\
  D & \coloneqq & \mathtt{hd}, \mathtt{tl}, \mathtt{fst}, \mathtt{snd} & \emph{Destructors}\\
  F & \coloneqq & \mathbf{def}\ f(\overline{x};\overline{\alpha}) \coloneq t & \emph{Definitions}\\
  t & \coloneqq & & \emph{Terms}\\
  && x & \emph{Variables}\\
  && \lit{n}  & \emph{Literals}\\
  && t \odot t & \emph{Binary Operations}\\
  && \mathbf{ifz}(t,t,t) & \emph{Zero Conditional}\\
  && \letin{x}{t}{t} & \emph{Let-Bindings}\\
  && f(\overline{t};\overline{\alpha}) \coloneq t & \emph{Top-Level Calls}\\
  && K(\overline{t}) & \emph{Constructors}\\
  && \caseof{t}{\overline{K(\overline{x}}) \Rightarrow t} & \emph{Case Expressions}\\
  && t.D(\overline{t}) & \emph{Destructors}\\
  && \mathbf{cocase} \{ \overline{ D(\overline{x}}) \Rightarrow t \} & \emph{Cocase Expressions}\\
  && \lambda x.t & \emph{Lambda-Abstractions}\\
  && t\ t & \emph{Function Applications}\\
  && \mathbf{label}\ \alpha\ \{t\} & \emph{Labels}\\
  && \mathbf{Goto}(t;\alpha) & \emph{Goto}
\end{array}
\] 
\section{AxCore Syntax}
\[
\begin{array}{l c r r}
  K & \coloneqq & \mathtt{Nil}, \mathtt{Cons}, \mathtt{Tup} & \emph{Constructors}\\
  D & \coloneqq & \mathtt{hd}, \mathtt{tl}, \mathtt{fst}, \mathtt{snd}, \mathtt{ap} & \emph{Destructors}\\
  F & \coloneqq & \mathbf{def}\ f(\overline{x};\overline{\alpha}) \coloneq s & \emph{Definitions}\\
  p & \coloneqq & & \emph{Producers}\\
  && x & \emph{Variables}\\
  && \lit{n} & \emph{Literals}\\
  && \mu \alpha.s & \mu-\emph{Abstractions}\\
  && K(\overline{p};\overline{c}) & \emph{Constructors}\\
  && \mathbf{cocase} \{ \overline{D(\overline{x};\overline{\alpha})) \Rightarrow s}\} & \emph{Cocase expressions}\\
  c & \coloneqq && \emph{Consumers}\\
  && \alpha & \emph{Covariables}\\
  && \tilde{\mu} x.s & \tilde{\mu}-\emph{Abstractions}\\
  && D(\overline{p};\overline{c}) & \emph{Destructors}\\
  && \mathbf{case} \{ \overline{C(\overline{x};\overline{\alpha}) \Rightarrow s} \} & \emph{Case-Expressions}\\
  S & \coloneqq && \emph{Statements}\\
  && \cut{p}{c} & \emph{Cuts}\\
  && \cdot(p,p;c) & \emph{Binary Operations}\\
  && \mathbf{ifz}(p;s,s) & \emph{Zero Conditional}
\end{array}
\]

\section{Translation}
\[
  \begin{array}{l c r}
    \translate{\mathbf{def}\ f(\overline{x};\overline{\alpha})} & \coloneq & \mathbf{def}\ f(\overline{x};\overline{\alpha},\alpha) \coloneq \cut{\translate{t}}{\alpha}\\
  \quad \\
    \translate{x} & \coloneq & x\\
    \translate{n} & \coloneq & n\\
    \translate{t_1 \cdot t_2} & \coloneq & \mu \alpha.\cdot{\translate{t_1},\translate{t_2};\alpha}\\
    \translate{\mathbf{ifz}(t_1,t_2,t_3)} & \coloneq & \mu \alpha.\mathbf{ifz}(\translate{t_1},\cut{\translate{t_2}}{\alpha},\cut{\translate{t_3}}{\alpha}) \\
    \translate{\letin{x}{t_1}{t_2}} & \coloneq & \mu \alpha.\cut{\translate{t_1}}{\tilde{\mu}x.\cut{\translate{t_2}}{\alpha}}\\
    \translate{f(\overline{t};\overline{\alpha})} & \coloneq & \mu \alpha.f(\overline{\translate{t}};\overline{\alpha},\alpha)\\
    \translate{K(\overline{t_i})} & \coloneq & K(\overline{\translate{t_i}})\\
    \translate{\caseof{t}{\overline{K_i(\overline{x_{i,j}}) \Rightarrow t_i}}} & \coloneq & \mu \alpha \cut{\translate{t}}{\mathbf{case}\ \{ \overline{K_i(\overline{x_{i,j}}) \Rightarrow \cut{\translate{t_i}}{\alpha}}\}}\\
    \translate{t.D(\overline{t_i})} & \coloneq & \mu\alpha.\cut{\translate{t}}{D(\overline{\translate{t_i}};\alpha)}\\
    \translate{\mathbf{cocase}\ \{\overline{D_i(\overline{x_{ij}})\Rightarrow t_i}\}} & \coloneq & \mathbf{cocase}\ \{ \overline{D_i(\overline{x_{i,j};\alpha_i})\Rightarrow \cut{\translate{t_i}}{\alpha_i}} \} \\
  \end{array}
\]
\end{document}
